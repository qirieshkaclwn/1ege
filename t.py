from itertools import permutations
def tren_ege_1zad():
    routes = 'DB DC CE CG EG GF FA FB AB' #сюды пишем дороги с рисунка DC и CB одна дорога так что не повторяем
    tab = [15, 16, 23, 24, 27, 35, 37, 46, 56] #сюды пишем дороги с таблицы 15 и 51 одна дорога так что не повторяем
    for perm in permutations('ABCDEFG'): # тут короче идёт перебор буковок
        temp = [perm[t // 10 - 1 ] + perm[t % 10 - 1] for t in tab] # тут мы берём 1 цифру из tab и отделяем от второй - 1 потому что осчёт идёт с 0 и прибовляем 2 цифру
        if all([m in routes or m[::-1] in routes for m in temp]): #тут короче если все цифры из temp совпадают с буквами из routes. m[::-1] просто переварачивает цифры напирмиер из 17 делает 71
            print(perm) #выводит все буквы попорядку тут 1 буква будет соответствовать 1 дороге
            B_index = perm.index('B') #на мсто B ставим букву цифру которой хотим найти и получаем её номер
            C_index = perm.index('C') #на мсто C ставим букву цифру которой хотим найти и получаем её номер
            print(f"ответ:{B_index + 1}{C_index + 1}") #выводим ответ при семитричном ресунке млжет быть 2 ответа пишем то что тербует задание например В ответе запишите эти два номера в возрастающем порядке
tren_ege_1zad()